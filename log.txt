工作日志 2月1日（请用sublime打开）
实现需求：股市中的两千多支股票的前十个大股东每次出公告的时候都会有变化，在出现变化的时候能够检测它们。
实现方法，抽象需求，即是假设有两个数组（python中为list）a[]和b[]，分别存储了10个字符串，用一个双层循环将b的每一个字符和a相比，每增加一个相同的一个设置的变量增加一。

日志
条目一：刚开始直接使用了循环了10*10的一百次，但是实际上是在a和b中有一些元素并没有满上十个（问题在于证券市场给的前十大股东有时候并没有给全，有时候只给了一个），解决办法是每个for循环用for i in a 和 for i in b 这两个语句来进行循环，这样就可以解决这个bug
条目二:将中文（比如说表头）写入.csv文件的时候，出现了乱码的情况。解决办法是将u‘中文’加上一个.encode('gbk')来编码，解决这个问题。
条目三:大股东的内容中有些如英文名the name of a company，这会造成在读入.csv的时候出现断开的问题（本来的分断符号是,）尝试使用python字符串的replace(‘ ’,‘_’)来解决。其中一个小问题是replace并不会修改原本的字符串，也就是说要用另外一个变量在接受被改变过的字符串。方法。然后通过小实验发现空格并不会造成csv记录的分隔，于是继续寻找其他的原因。然后发现不是空格的原因...这个公司本身就有一个逗号...GAOLINGFUND,L.P. 英国高林斯特证券公司...于是改用另一种方法。直接用它原来的东西来隔开(即是;)。问题解决。
*条目四：按照原来的逻辑，是假设原本的数据是没有问题的，即是全部都是十个大股东，但是实际情况出现了一些错误，有些股东只有一个(我也不知道为什么)，待解决

继续工作：完善每支股票的各种数据
实现需求：获得全市场的股票代码
实现：直接从数据库获得，放到一个list中。问题在于不会包含新的IPO，截止日期2016.2.1

实现需求：将多条曲线绘制在一个图标中，能够直接进行观看。
实现方法：百度到matplotlib可以进行相关的工作，进行学习。
matplotlib作者英年早逝，感谢他所做出的贡献。John Hunter will be missed！
http://matplotlib.org/index.html
VLookup 工具

工作日志 2月2日
首先将上周的send_mail的文件上传到github上面去了，值得注意的一点是现在github变得越来越简单了，它的GUI界面正在越来越好用。
然后将matplotlib的各种东西装好了，包括numpy，dateutil还有一个忘了，另外安装matplotlib的方法就是下一个matplotlib-1.3.1.win32-py2.7.exe然后安装就好了。
将matplotlib安装好后运行了一下示例程序能够正常工作。
然后开始继续处理杂事，将大股东变动数的全市场拿下来，万得的金融终端每周只有500W条数据的上限，之前不知道，这周直接爆炸了。。。大概的计算量是全证券市场是2800支，然后取的是3年的交易日大概会有700多天，这样的话一波下来就是接近200W，我多调试了几次就直接爆炸了，这是昨天的问题。

小记：成功将全市所有的大股东的内容存成.csv文件，其中出现的问题是不是每一天的股票都会有三年的十大股东的数据，所以每读取一段时间的股东数据之后就需要将时间向后延长，最后花了一点时间才将所有的股东数据全部读取完。

之后修改文件，将户数等的数据给修饰漂亮，将环比的问题给修复，即是将环比变为环比增长速度。
小记：修复完毕。其中出现一个问题，当基期数为负数的时候，环比增长速度显示的是方向是反向的，所以添加一个符号来修正这个问题。今天工作结束，然后准备继续学习matplotlib&将多个excel表整合成为一个可视化的表

工作日志 2月3日
将所有的表合并到一个工作簿中了，接下来是要弄成一个可视化的东西。现在面临的问题是数据越来越多，如果按照原来的用接口读入，变成excel文件然后来操作这样的模式，中间我也考虑过学习一下VBA，但是依然发现VBA这样的语言还是比较低效，觉得效率越来越低下，所以是时候开发一个效率更高的系统了。
实现需求：全市场所有股票，点击即可产生报表。这件事情比较复杂，将它分解一下来看
1、能够根据获得的数据画图（之前考虑的matplotlib）
1）先要能有个图形化界面
2、能够封装万得的接口，从源数据获得数据（图形化以降低操作的难度）
1）将万得获得的数据存储到mongodb里面，其中需要设计一个数据库
3、在这个图形化界面中，一支股票对应多个数据，点击某股票即可获得图表

选择mongodb的原因是，虽然证券数据是十分典型的能够用关系型数据(DBRM)来存储的，但是还会涉及一些舆情分析，这些就是NoSQL的数据（并不是我在做），考虑到到时候的对接所以选择mongodb。普遍来说MySQL\sqlserver\DB2这样的老牌数据库性能会比较优良，但是就现在进行的工作来看，需要的数据量和存取速度并不需要那么高的要求，mongodb性能也不见得差，而且nosql系统一般也比较注重性能和扩展性。以上解释了为什么选择mongodb

然后开始着手工作，首先要解决的是将万得的数据拿下来放在mongodb数据库中这一个对接的问题。

mongodb的CAP原则很重要，但是在这里几乎用不到。
我是在这里下载的：https://www.mongodb.org/dl/win32/x86_64-2008plus-ssl

mongoDB的pymongo的东西有了初步的了解，现在先做的事情是把mongodb与python之间的存取给搞清楚。
上一个要做的东西太大了，搞了半天弄得头昏脑涨的，现在把要做的东西再简化一下，就是先存储一个excel到mongodb里面，然后用python读取第一列所有的股票信息到一个list里面，再读第二列到一个list里面完成这样一个雏形。
不过还是很困难，中文的教程太少了，只能直接撸API
网址http://api.mongodb.org/python/current/api/pymongo/collection.html

直接撸数据库还是很困难，但是现在找到一种可以简单地先从excel中拿到数据的方法，所以先不用管那么多了，开始撸matplotlib，首先实现的是选所有股票的两个季报的曲线图绘出来。

工作日志 2月4日
成功实现了将两根曲线绘制在一个图中的功能，然后还要继续将下标等的细节给打磨好
下表的时间表示出了一些问题，表示略恼火，但是现在比较有趣的是matplot的图形质量非常高，而且能够拉伸。

今天研究了一天的横坐标，并且怼了很久的坐标轴的显示问题，matplotlib是一个大坑，所以暂时能够将几根线给显示出来就好了。

在乱搜索的时候发现一个东西，sikuli，上帝之眼，好像很有用的样子。

问题：现在遇到的问题是使用matplotlib的界面横坐标不好显示日期，如果将所有的日期都显示出来的话会就会密密麻麻的非常不美观。暂时解决的办法暂时只显示几个代表性的日期，等到需要的时候再具体解决，把框架搭出来。

然后开始处理一个需求，即是按一下就有一条线，再按一下这条线消失。

工作日志 2月5日

头晕晕乎乎的，因为有很多东西要做。今天更进一步了解了一下matplotlib，是由figure，axe这两个主要的层次构成的。

经过一番研究，已经成功将按钮的功能实现了，现在就要实现根据需求按一下按钮产生一根线或者两根线。

两根线的需求已经实现了，现在要实现能够画出若干的线。以这个为雏形，现在要实现能够体现若干的数据必须要设计一个数据库来存储。

继续尝试使用mongodb建立数据库，经过一段时间的尝试，大概能够对于mongodb进行使用了，对于mongodb进行了一些尝试性的增删查改，其中遗留的问题是对于索引的使用还是有一点不熟练。

成功建立起了一个数据库，下一步就是将数据全部塞进数据库里面去，然后再找一个合适的方法调用出来，今天数据库的事情解决。新春快乐

工作日志 2月16日
春节归来，开始整理一下思路，然后继续手上的工作。现在主要需要考虑的是将图表做的更加好看，这样的话就能够让其他人看得更清楚。


2016年3月29日星期二日志

很久没写日志了，因为电脑崩溃过一次，导致以前的工作日志全部掉了，现在重新开始记上。昨天星期一来的主要工作是将选股器的v1.0进行重构，重构的方式是按照MVC的设计模式将程序分为三个部分，工作量比较大，整整写了一天。今天过来将程序给收尾，然后开始添加新的功能，主要就是把各种各样的格式给设置出来，然后琢磨了半天的openpyxl，看源码看文档什么的忙的不亦乐乎；添加了一个统计的功能。第二天准备开始用pyqt写一个新的好看点的界面出来。

学习方面没怎么学习，晚上一下班就睡觉了，实在惭愧。

股市到了止损线，果断割了跑路。

2016年3月30日星期三日志

今天过来补了一下日志和一些日常记录。然后准备用pyqt进行界面的操作。

挂着马原的网课，这老师嘴一张一张的做着颜艺真搞笑。

早上一看股市居然大涨，心里有点郁闷，但是调整一下也就无所谓了。

2016年3月31日星期四日志

今天继续进行pyqt的设计，发现pyqtdesigner比较好用，其实是一个非常好的API，其中有一个弹簧的操作非常合适。

股票跌了回来，心情好些了

2016年4月1日

愚人节，好像没人来整我，将就了~将设计好的界面和功能对接了起来，这样就能使用了，下一步是将数据进行前复权

发现了一个BUG，有时候如果出现的空的数据的话就会造成python list为空从而报错，调试了这个bug然后继续进行修复。

关于爬取上证的那个表格的问题，我直接使用了selenium进行暴力抓取，从而拿到了表格的数据。其中的小tips很简单，就是用chrome的审查元素，然后右键复制出xpath，之后用get_element_by_xpath,这样就能非常快的抓取到一些渲染后的文件，还有加载速度的问题，为了防止加载过于缓慢，可以加一个时间停止(停大概一秒的样子就可以了)

2016年4月5日

放假回来，首先解决了两个小问题，第一个是将上证指数的表格抓取下来，成功写成了.csv文件，另外一个就是解决了搜狗输入法的全角半角问题。

之后开始使用万得的API来将股票数据改为前复权。

2016年4月6日

将界面以及各种小东西给整理好了放在了现有的V2.1版本中整合完毕，然后美化了一下。之后进行了数据库的整理

2016年4月7日

开始重新研究matplotlib，准备将一些东西给绘制出来，成功实行了K线图的绘制

2016年4月8日

开始绘制星数，将一些东西重新整理了一下，现在要解决几个问题

·将股票的间隔问题给解决了
·将星数绘制在K线图对应的位置
·绘制10MA
·能够显示价格

之后和老师谈了谈金融界的问题，发现里面的氛围和科技大学简直是两码事，可能事情比想象中的复杂

2016年4月9日

整理我的电脑，换床单，做清洁

2016年4月10日

大学生英语竞赛，不知道考的怎么样，感觉还行，然后玩了一下午的三国志11

2016年4月11日

来上班了，将所有的东西利用git整合起来，便于远程的管理，然后就继续今天的工作了

下午还要去补办身份证

又是一大堆事情，我在考虑要不要写一个后台来管理了

又发现一个问题，主程序在循环的时候窗口会被卡死，这又是一个需要解决的问题
